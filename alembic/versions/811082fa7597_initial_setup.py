"""Initial setup

Revision ID: 811082fa7597
Revises: 
Create Date: 2025-05-25 15:16:26.170858

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '811082fa7597'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('categories', 'title',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.drop_constraint('categories_name_key', 'categories', type_='unique')
    op.alter_column('donations', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('donations', 'project_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('donations', 'amount',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               type_=sa.Float(),
               existing_nullable=False)
    op.alter_column('donations', 'message',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('donations', 'donated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('donations_project_id_fkey', 'donations', type_='foreignkey')
    op.drop_constraint('donations_user_id_fkey', 'donations', type_='foreignkey')
    op.create_foreign_key(None, 'donations', 'projects', ['project_id'], ['id'])
    op.create_foreign_key(None, 'donations', 'users', ['user_id'], ['id'])
    op.add_column('login_tokens', sa.Column('expires', sa.DateTime(), nullable=False))
    op.alter_column('login_tokens', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('login_tokens', 'token',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('login_tokens', 'revoked',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('login_tokens', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('fk_user', 'login_tokens', type_='foreignkey')
    op.create_foreign_key(None, 'login_tokens', 'users', ['user_id'], ['id'])
    op.drop_column('login_tokens', 'expires_at')
    op.add_column('projects', sa.Column('user_id', sa.Integer(), nullable=False))
    op.alter_column('projects', 'title',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('projects', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('projects', 'goal_amount',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('projects', 'current_amount',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               type_=sa.Integer(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('projects', 'category_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('projects', 'start_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('projects', 'end_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               nullable=False)
    op.drop_constraint('projects_owner_id_fkey', 'projects', type_='foreignkey')
    op.drop_constraint('projects_category_id_fkey', 'projects', type_='foreignkey')
    op.create_foreign_key(None, 'projects', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'projects', 'categories', ['category_id'], ['id'])
    op.drop_column('projects', 'owner_id')
    op.alter_column('users', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'email',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('users', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.add_column('projects', sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.create_foreign_key('projects_category_id_fkey', 'projects', 'categories', ['category_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key('projects_owner_id_fkey', 'projects', 'users', ['owner_id'], ['id'], ondelete='SET NULL')
    op.alter_column('projects', 'end_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               nullable=True)
    op.alter_column('projects', 'start_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               nullable=True)
    op.alter_column('projects', 'category_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('projects', 'current_amount',
               existing_type=sa.Integer(),
               type_=sa.NUMERIC(precision=12, scale=2),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('projects', 'goal_amount',
               existing_type=sa.Integer(),
               type_=sa.NUMERIC(precision=12, scale=2),
               nullable=True)
    op.alter_column('projects', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('projects', 'title',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_column('projects', 'user_id')
    op.add_column('login_tokens', sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'login_tokens', type_='foreignkey')
    op.create_foreign_key('fk_user', 'login_tokens', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('login_tokens', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('login_tokens', 'revoked',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('login_tokens', 'token',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('login_tokens', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('login_tokens', 'expires')
    op.drop_constraint(None, 'donations', type_='foreignkey')
    op.drop_constraint(None, 'donations', type_='foreignkey')
    op.create_foreign_key('donations_user_id_fkey', 'donations', 'users', ['user_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key('donations_project_id_fkey', 'donations', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.alter_column('donations', 'donated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('donations', 'message',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('donations', 'amount',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=12, scale=2),
               existing_nullable=False)
    op.alter_column('donations', 'project_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('donations', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_unique_constraint('categories_name_key', 'categories', ['title'], postgresql_nulls_not_distinct=False)
    op.alter_column('categories', 'title',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    # ### end Alembic commands ###
